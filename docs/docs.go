// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "Аутентификация пользователя и получение JWT токена",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT токен\"  example({\"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"})",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "Получение, создание, обновление и удаление задач",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Управление задачами",
                "parameters": [
                    {
                        "description": "Данные задачи",
                        "name": "task",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список задач или обновленная задача",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "201": {
                        "description": "Созданная задача",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "204": {
                        "description": "Задача удалена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Неавторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Задача не найдена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Получение, создание, обновление и удаление задач",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Управление задачами",
                "parameters": [
                    {
                        "description": "Данные задачи",
                        "name": "task",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список задач или обновленная задача",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "201": {
                        "description": "Созданная задача",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "204": {
                        "description": "Задача удалена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Неавторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Задача не найдена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "put": {
                "description": "Получение, создание, обновление и удаление задач",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Управление задачами",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "ID задачи",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "description": "Данные задачи",
                        "name": "task",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список задач или обновленная задача",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "201": {
                        "description": "Созданная задача",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "204": {
                        "description": "Задача удалена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Неавторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Задача не найдена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Получение, создание, обновление и удаление задач",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Управление задачами",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "ID задачи",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "description": "Данные задачи",
                        "name": "task",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список задач или обновленная задача",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "201": {
                        "description": "Созданная задача",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "204": {
                        "description": "Задача удалена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Неавторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Задача не найдена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Task": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Дата создания задачи в формате RFC3339\nexample: \"2025-08-22T17:00:00Z\"",
                    "type": "string"
                },
                "deletedAt": {
                    "description": "Дата soft-удаления задачи в формате RFC3339\nexample: \"2025-08-22T17:00:00Z\"",
                    "type": "string"
                },
                "id": {
                    "description": "ID задачи\nexample: 1",
                    "type": "integer"
                },
                "status": {
                    "description": "Статус задачи\nexample: \"pending\"",
                    "type": "string"
                },
                "title": {
                    "description": "Заголовок задачи\nexample: \"Сделать домашку\"",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Дата обновления задачи в формате RFC3339\nexample: \"2025-08-22T17:00:00Z\"",
                    "type": "string"
                },
                "user_id": {
                    "description": "ID пользователя, которому принадлежит задача\nexample: 42",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
