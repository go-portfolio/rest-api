basePath: /
definitions:
  models.Task:
    properties:
      created_at:
        description: |-
          Дата создания задачи в формате RFC3339
          example: "2025-08-22T17:00:00Z"
        type: string
      deleted_at:
        description: |-
          Дата soft-удаления задачи в формате RFC3339
          example: "2025-08-22T17:00:00Z"
        type: string
      id:
        description: |-
          ID задачи
          example: 1
        type: integer
      status:
        description: |-
          Статус задачи
          example: "pending"
          допустимые значения: pending, in_progress, done
        enum:
        - pending
        - in_progress
        - done
        - todo
        - open
        - new
        type: string
      title:
        description: |-
          Заголовок задачи
          example: "Сделать домашку"
          min length: 1
        minLength: 1
        type: string
      updated_at:
        description: |-
          Дата обновления задачи в формате RFC3339
          example: "2025-08-22T17:00:00Z"
        type: string
      user_id:
        description: |-
          ID пользователя, которому принадлежит задача
          example: 42
        type: integer
    required:
    - status
    - title
    - user_id
    type: object
  models.User:
    properties:
      created_at:
        description: |-
          Дата создания пользователя в формате RFC3339
          example: "2025-08-22T17:00:00Z"
        type: string
      email:
        description: |-
          Электронная почта пользователя
          example: "user@example.com"
          format: email
        type: string
      id:
        description: |-
          ID пользователя
          example: 1
        type: integer
      password_hash:
        description: |-
          Хэш пароля пользователя
          example: "$2a$10$E0NRl..."
          min length: 6
        minLength: 6
        type: string
      username:
        description: |-
          Логин пользователя
          example: "user123"
          min length: 3
          max length: 20
        maxLength: 20
        minLength: 3
        type: string
    required:
    - email
    - password_hash
    - username
    type: object
  server.LoginRequest:
    properties:
      password:
        description: |-
          Пароль пользователя
          example: pass123
        type: string
      username:
        description: |-
          Логин пользователя
          example: user1
        type: string
    required:
    - password
    - username
    type: object
  server.LoginResponse:
    properties:
      token:
        description: |-
          JWT токен
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user:
        allOf:
        - $ref: '#/definitions/models.User'
        description: Данные пользователя
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API для пользователей и задач
  title: REST API Example
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Аутентификация пользователя и получение JWT токена
      parameters:
      - description: Данные для входа
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/server.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: JWT токен и данные пользователя
          schema:
            $ref: '#/definitions/server.LoginResponse'
        "400":
          description: Некорректный JSON
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Неверные учетные данные
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Авторизация пользователя
      tags:
      - auth
  /tasks:
    get:
      consumes:
      - application/json
      description: Получение, создание, обновление и удаление задач
      parameters:
      - description: Данные задачи
        in: body
        name: task
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "200":
          description: Список задач или обновленная задача
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "201":
          description: Созданная задача
          schema:
            $ref: '#/definitions/models.Task'
        "204":
          description: Задача удалена
          schema:
            type: string
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "401":
          description: Неавторизован
          schema:
            type: string
        "404":
          description: Задача не найдена
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Управление задачами
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Получение, создание, обновление и удаление задач
      parameters:
      - description: Данные задачи
        in: body
        name: task
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "200":
          description: Список задач или обновленная задача
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "201":
          description: Созданная задача
          schema:
            $ref: '#/definitions/models.Task'
        "204":
          description: Задача удалена
          schema:
            type: string
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "401":
          description: Неавторизован
          schema:
            type: string
        "404":
          description: Задача не найдена
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Управление задачами
      tags:
      - tasks
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Получение, создание, обновление и удаление задач
      parameters:
      - description: ID задачи
        example: 1
        in: path
        name: id
        type: integer
      - description: Данные задачи
        in: body
        name: task
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "200":
          description: Список задач или обновленная задача
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "201":
          description: Созданная задача
          schema:
            $ref: '#/definitions/models.Task'
        "204":
          description: Задача удалена
          schema:
            type: string
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "401":
          description: Неавторизован
          schema:
            type: string
        "404":
          description: Задача не найдена
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Управление задачами
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Получение, создание, обновление и удаление задач
      parameters:
      - description: ID задачи
        example: 1
        in: path
        name: id
        type: integer
      - description: Данные задачи
        in: body
        name: task
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "200":
          description: Список задач или обновленная задача
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "201":
          description: Созданная задача
          schema:
            $ref: '#/definitions/models.Task'
        "204":
          description: Задача удалена
          schema:
            type: string
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "401":
          description: Неавторизован
          schema:
            type: string
        "404":
          description: Задача не найдена
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Управление задачами
      tags:
      - tasks
swagger: "2.0"
